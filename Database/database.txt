-- Create the database
CREATE DATABASE LMS default CHARACTER SET utf8 collate utf8_hungarian_ci;
USE LMS;

-- Create Authors table
CREATE TABLE authorsTable (
    AuthorID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Nationality VARCHAR(100)
);

-- Create Publisher table
CREATE TABLE Publisher (
    PublisherID INT AUTO_INCREMENT PRIMARY KEY,
    PublisherName VARCHAR(255) NOT NULL
);

-- Create Roles table
CREATE TABLE Roles(
    RolesID INT AUTO_INCREMENT PRIMARY KEY,
    Role VARCHAR(100) NOT NULL
);

-- Create Categories table
CREATE TABLE Categories (
    CategoryID INT AUTO_INCREMENT PRIMARY KEY,
    CategoryName VARCHAR(100) NOT NULL
);

-- Create MembershipType table
CREATE TABLE MembershipType(
    MembershipTypeID INT AUTO_INCREMENT PRIMARY KEY,
    MembershipType VARCHAR(100) NOT NULL
);

-- Create Books table
CREATE TABLE Books (
    BookID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    AuthorID INT,
    ISBN VARCHAR(13),
    PublisherID INT,
    PublicationYear YEAR,
    CategoryID INT,
    CopiesAvailable INT DEFAULT 0,
    FOREIGN KEY (AuthorID) REFERENCES authorsTable(AuthorID),
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID),
    FOREIGN KEY (PublisherID) REFERENCES Publisher(PublisherID)
);

-- Create Users table (previously called Members)
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    MembershipTypeID INT NOT NULL,
    RolesID INT NOT NULL,
    Email Varchar(50) not Null,
    Username Varchar(25) not null,
    Password varchar(100) not null,
    FOREIGN KEY (MembershipTypeID) REFERENCES MembershipType(MembershipTypeID),
    FOREIGN KEY (RolesID) REFERENCES Roles(RolesID)
);

-- Create Borrowings table
CREATE TABLE Borrowings (
    BorrowID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    BookID INT NOT NULL,
    BorrowDate DATE NOT NULL,
    ReturnDate Date,
    Returned ENUM('Yes', 'No') DEFAULT 'No',
    FOREIGN KEY (UserID) REFERENCES Users(UserID),
    FOREIGN KEY (BookID) REFERENCES Books(BookID)
);