-- Create the database
CREATE DATABASE LibraryDB;
USE LibraryDB;

-- Create Authors table
CREATE TABLE Authors (
    AuthorID INT AUTO_INCREMENT PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    Nationality VARCHAR(100),
    Email VARCHAR(100),
    Password Varchar(20)
    Username
);

-- Create Categories table
CREATE TABLE Categories (
    CategoryID INT AUTO_INCREMENT PRIMARY KEY,
    CategoryName VARCHAR(100) NOT NULL
);

-- Create Publisher table
CREATE TABLE Publisher (
    PublisherID INT AUTO_INCREMENT PRIMARY KEY,
    PublisherName VARCHAR(255) NOT NULL
);

-- Create Books table
CREATE TABLE Books (
    BookID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    AuthorID INT,
    PublisherID INT,
    ISBN VARCHAR(13),
    PublicationYear YEAR,
    CategoryID INT,
    CopiesAvailable INT DEFAULT 0,
    FOREIGN KEY (AuthorID) REFERENCES Authors(AuthorID),
    FOREIGN KEY (CategoryID) REFERENCES Categories(CategoryID)
    FOREIGN KEY (PublisherID) REFERENCES Publisher(PublisherID);
);

-- Create Members table
CREATE TABLE Members (
    MemberID INT AUTO_INCREMENT PRIMARY KEY,
    FirstName VARCHAR(100) NOT NULL,
    LastName VARCHAR(100) NOT NULL,
    MembershipType ENUM('Student', 'Adult') NOT NULL
);

-- Create Borrowings table
CREATE TABLE Borrowings (
    BorrowID INT AUTO_INCREMENT PRIMARY KEY,
    MemberID INT,
    BookID INT,
    BorrowDate DATE NOT NULL,
    Returned ENUM('Yes', 'No') DEFAULT 'No',
    FOREIGN KEY (MemberID) REFERENCES Members(MemberID),
    FOREIGN KEY (BookID) REFERENCES Books(BookID)
);



-- Create Views
-- View for currently borrowed books (not returned yet)
CREATE VIEW CurrentlyBorrowedBooks AS
SELECT b.BorrowID, m.FirstName, m.LastName, bk.Title, bk.ISBN, b.BorrowDate
FROM Borrowings b
JOIN Members m ON b.MemberID = m.MemberID
JOIN Books bk ON b.BookID = bk.BookID
WHERE b.Returned = 'No';

-- View for most borrowed books
CREATE VIEW MostBorrowedBooks AS
SELECT bk.Title, bk.ISBN, COUNT(b.BorrowID) AS BorrowCount
FROM Borrowings b
JOIN Books bk ON b.BookID = bk.BookID
GROUP BY bk.BookID
ORDER BY BorrowCount DESC;